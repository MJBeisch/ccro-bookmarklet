var CCROsettings={};
function CCROsetCookie(name,value,time,period){var expires="";if(time){var date=new Date();if(period=='s'){time=time*1000;}
else if(period=='m'){time=time*1000*60;}
else if(period=='h'){time=time*1000*60*60;}
else{time=time*1000*60*60*24;}
date.setTime(date.getTime()+time);expires="; expires="+date.toUTCString();}
document.cookie=name+"="+((encodeURIComponent(value))||"")+expires+"; path=/";}
function CCROreadCookie(name){var nameEQ=name+"=",ca=document.cookie.split(';');for(var i=0;i<ca.length;i++){var c=ca[i];while(c.charAt(0)==' ')c=c.substring(1,c.length);if(c.indexOf(nameEQ)==0)return(decodeURIComponent(c.substring(nameEQ.length,c.length)));}
return null;}
function CCROexpireCookie(name){document.cookie=name+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;";}
function CCROgetValueByPath(JSobject,path){if(!JSobject||!path)return undefined;const keys=path.replace(/\[(\w+)\]/g,'.$1').split('.');let current=JSobject;for(const key of keys){if(current[key]!==undefined){current=current[key];}
else{return undefined;}}
return current;}
function CCROsaveSettings(){CCROsetCookie("CCROsettings",JSON.stringify(CCROsettings),3650);}
function CCROopen(){jQuery('head').append('<link rel="stylesheet" type="text/css" href="https://mjbeisch.github.io/ccro-bookmarklet/CCRObookmarklet.min.css">'); if(CCROreadCookie('CCROsettings')){CCROsettings=JSON.parse(CCROreadCookie('CCROsettings'));} 
else{CCROsettings={toggle:1};CCROsaveSettings();}
CCROrenderValidationUI();}
function CCROclose(){CCROexpireCookie('CCROsettings');CCROexpireCookie('CCROvalidation'); jQuery(".CCROoverlayui").remove();}
function CCROtoggle(){if(CCROsettings.toggle==1){CCROsettings.toggle=0;jQuery(".CCROoverlayui").addClass('collapsed');jQuery('.CCROv-toggle').text('+');}
else{CCROsettings.toggle=1;jQuery(".CCROoverlayui").removeClass('collapsed');jQuery('.CCROv-toggle').text('-');}
CCROsaveSettings();}
function CCROmarkActiveExperiment(experimentID){var experimentSelector=jQuery("#experiment-"+experimentID);jQuery("#experiment-"+experimentID).addClass("active");jQuery("#"+experimentID).prop("disabled",false);}
function CCRORenderConvertExperimentList(experiments,activeExperiments,experimentNameKey,experimentVariationsKey,experimentVariationIdKey){var CCROvalidationCookieCheck='', ConvertVariationCookie=CCROreadCookie('_conv_v'), experimentList=Object.keys(experiments), activeexperimentList=Object.keys(activeExperiments), experimentLoop=0, activeStateLoop=0;
 if(experimentList.length>0){ jQuery(".CCROoverlayuicontent").append("<table class=\"experimentlist\"><caption>Convert Experiences Experiment List</caption><thead><tr><th class=\"experiment-name\">Experiment Name</th><th class=\"variations\">Variations</th><!--<th class=\"results-link\">Results</th>--></tr></thead><tbody></tbody></table>"); for(;experimentLoop<experimentList.length;++experimentLoop){var experiment=experimentList[experimentLoop], experimentId=experiments[experiment].id
 experimentName=experiments[experiment][experimentNameKey], experimentVariations=experiments[experiment][experimentVariationsKey], experimentVariationIds=Object.keys(experimentVariations), variationLoop=0, variationOptions="";
 for(;variationLoop<experimentVariationIds.length;++variationLoop){var variationId=experimentVariationIds[variationLoop], variationName=experimentVariations[variationId].name; if(experimentVariationIdKey){variationId=CCROgetValueByPath(experimentVariations[variationId],experimentVariationIdKey);}
console.log('CCRO - variationId = '+variationId);if(variationName!=null){if(ConvertVariationCookie.indexOf(variationId)!=-1){variationOptions+="<option value=\""+variationId+"\" selected>"+variationName+"</option>";}
else{variationOptions+="<option value=\""+variationId+"\">"+variationName+"</option>";}}} 
jQuery(".CCROoverlayui .experimentlist").append("<tr id=\"experiment-"+experimentId+"\"><td class=\"experiment-name\"><span class=\"CCRO-active-circle\"></span> "+experimentName+"</td><td class=\"variations\"><select disabled id=\""+experimentId+"\">"+variationOptions+"</select></td><!--<td class=\"results-link\"><a class=\"CCROv-button\" href=\"#\" target=\"_blank\">View Results</a></td>--></tr>");} 
for(;activeStateLoop<activeexperimentList.length;++activeStateLoop){CCROmarkActiveExperiment(activeexperimentList[activeStateLoop]);} 
jQuery(".experimentlist .variations select").change(function(event){if(!event.originalEvent){return;}
var selectedExperiment=jQuery(this).attr("id"),selectedVariation=jQuery(this).val();window._conv_q=window._conv_q||[];window._conv_q.push(['assignVariation',selectedExperiment,selectedVariation]);window._conv_q.push(["executeExperiment",selectedExperiment]);window.location.reload(true);});}
else{jQuery(".CCROoverlayuicontent").append("<p>There are currently no Convert Experiences experiments built for this site.</p>");}}
function CCROrenderValidationUI(){var CCROvalidationCookieCheck='';
 if(window.location.href.indexOf('ccroqc=active')>0){CCROsetCookie('CCROvalidation','active',1);} 
if(CCROreadCookie('CCROvalidation')){CCROvalidationCookieCheck='checked';} 
jQuery(".CCROoverlayui").remove(); jQuery("body").append('<div class="CCROoverlayui"><div class="CCROv-header"><h2>Corvus CRO Experiment Overlay</h2></div><div class="CCROoverlayuiscroll"><div class="CCROoverlayuicontent"></div></div><div class="CCROoverlayOptions"><div class="CCROv-ui-buttons"><button class="CCROv-toggle CCROv-button">-</button><button class="CCROv-close CCROv-button">x</button></div><label class="CCROswitch CCROsetcookie"><input type="checkbox" '+CCROvalidationCookieCheck+'><span class="CCROslider CCROround"></span></label>QC Mode</div></div>'); if(CCROsettings.toggle==0){jQuery(".CCROoverlayui").addClass('collapsed');} 
jQuery('.CCROsetcookie input').change(function(event){if(!event.originalEvent){return;}
if(jQuery(this).is(':checked')){CCROsetCookie('CCROvalidation','active',1);}
else{CCROexpireCookie('CCROvalidation');}
window.location.reload(true);}); jQuery(".CCROv-close").click(function(){CCROclose();}); jQuery(".CCROv-toggle").click(function(){CCROtoggle();}); if(window.convert.data.experiments){CCRORenderConvertExperimentList(window.convert.data.experiments,window.convert.currentData.experiments,"n","vars");} 
else if(window.convert.data.experiences){CCRORenderConvertExperimentList(window.convert.data.experiences,window.convert.currentData.experiences,"name","variations","id");}}
if(window.jQuery===undefined){(function(){ var script=document.createElement("SCRIPT");script.src='https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js';script.type='text/javascript';script.onload=function(){CCROopen();};document.getElementsByTagName("head")[0].appendChild(script);})();}
else{CCROopen();}